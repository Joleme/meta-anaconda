From a4f9570312f39007fa252d91f37f43cd142b48f6 Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Tue, 24 Jul 2018 10:24:36 +0800
Subject: [PATCH 10/65] improve thread monitor

Set thread name, it is easy to monitor thread status by ps

Upstream-Status: Inappropriate [oe specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 pyanaconda/threading.py | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/pyanaconda/threading.py b/pyanaconda/threading.py
index 94497fb..ece8741 100644
--- a/pyanaconda/threading.py
+++ b/pyanaconda/threading.py
@@ -19,6 +19,8 @@
 #
 
 import threading
+import prctl
+from functools import wraps
 
 from pyanaconda.anaconda_loggers import get_module_logger
 log = get_module_logger(__name__)
@@ -263,6 +265,14 @@ class AnacondaThread(threading.Thread):
     _prefix_thread_counts = dict()
 
     def __init__(self, *args, **kwargs):
+        def set_thread_name(target):
+            @wraps(target)
+            def inner_target(*args, **kwargs):
+                prctl.set_name(self.name)
+                return target(*args, **kwargs)
+
+            return inner_target
+
         # if neither name nor prefix is given, use the worker prefix
         if "name" not in kwargs and "prefix" not in kwargs:
             kwargs["prefix"] = _WORKER_THREAD_PREFIX
@@ -274,6 +284,9 @@ class AnacondaThread(threading.Thread):
             self._prefix_thread_counts[prefix] = thread_num
             kwargs["name"] = prefix + str(thread_num)
 
+        if "target" in kwargs:
+            kwargs["target"] =  set_thread_name(kwargs["target"])
+
         if "fatal" in kwargs:
             self._fatal = kwargs.pop("fatal")
         else:
-- 
2.7.4

